substitutions:
  <<: !include secrets.yaml
  name: "videolight"
  displayName: "Video Light"

esphome:
  name: ${name}
  platform: ESP8266
  board: esp12e

ota:
  password: ${apipassword}

logger:

api:
  password: ${apipassword}
                   
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${name} IP Address"
      icon: "mdi:wan"
  - platform: version
    name: "${name} ESPHome Version"
    icon: "mdi:numeric"

time:
  - platform: homeassistant
    id: homeassistant_time    

wifi:
  ssid: ${WifiName}
  password: ${WifiPassword}

  ap:
    ssid: "${name} Hotspot"
    password: ${appassword}

output:
  - platform: esp8266_pwm
    pin: GPIO05
    frequency: 100 Hz
    id: pwm_output_yellow
  - platform: esp8266_pwm
    pin: GPIO12
    frequency: 100 Hz
    id: pwm_output_white

light:
  - platform: monochromatic
    output: pwm_output_yellow
    name: "Yellow Light Switch"
  - platform: monochromatic
    output: pwm_output_white
    name: "White Light Switch"   

switch:
  - platform: template
    name: "Lights"
    id: lights_switch
    restore_state: true
    optimistic: true
    turn_on_action:
      - output.turn_on: pwm_output_white       
      - output.turn_on: pwm_output_yellow
      - output.set_level: 
          id: pwm_output_white
          level: !lambda |-
            return (id(led_light_intensity).state/100) * ((id(led_color_temperature).state - 3200)/2300);  
      - output.set_level: 
          id: pwm_output_yellow
          level: !lambda |- 
            return (id(led_light_intensity).state/100) * ( (5500 - id(led_color_temperature).state)/2300 );             
    turn_off_action:
      - output.turn_off: pwm_output_white 
      - output.turn_off: pwm_output_yellow     

number:
  - platform: template
    name: White Light Intensity
    min_value: 0
    max_value: 100
    initial_value: 100
    step: 10
    id: led_intensity_white
    set_action:
      then: 
        - logger.log: "White intensity changed"
        - output.turn_on: pwm_output_white
        - output.set_level: 
            id: pwm_output_white
            level: !lambda |- 
              return x/100;       
  - platform: template
    name: Yellow Light Intensity
    min_value: 0
    max_value: 100
    initial_value: 100
    step: 10
    id: led_intensity_yellow
    set_action:
      then: 
        - logger.log: "Yellow intensity changed"
        - output.turn_on: pwm_output_yellow
        - output.set_level: 
            id: pwm_output_yellow
            level: !lambda |- 
              return x/100;        
  - platform: template
    name: Light Temperature
    min_value: 3200
    max_value: 5500
    initial_value: 3200
    unit_of_measurement: K
    step: 100
    id: led_color_temperature
    restore_value: true
    optimistic: true
    set_action:
      then: 
        - logger.log: "Light Temp changed"
        - output.turn_on: pwm_output_yellow
        - output.turn_on: pwm_output_white
        - output.set_level: 
            id: pwm_output_white
            level: !lambda |- 
              return (id(led_light_intensity).state/100) * ((x-3200)/2300);  
        - output.set_level: 
            id: pwm_output_yellow
            level: !lambda |- 
              return (id(led_light_intensity).state/100) * ((5500-x)/2300);                                                     
  - platform: template
    name: Light Brightness
    min_value: 0
    max_value: 100
    initial_value: 100
    unit_of_measurement: '%'
    step: 10
    id: led_light_intensity
    restore_value: true
    optimistic: true    
    set_action:
      then: 
        - logger.log: "Light Intensity changed"
        - if:
            condition:
              lambda: 'return x == 0;'
            then:
              - logger.log: "Turning off lights"
              - output.turn_off: pwm_output_yellow
              - output.turn_off: pwm_output_white
            else:
              - logger.log: "Turning on lights"
              - output.turn_on: pwm_output_yellow
              - output.turn_on: pwm_output_white
              - output.set_level: 
                  id: pwm_output_white
                  level: !lambda |-
                    return (x/100) * ((id(led_color_temperature).state - 3200)/2300);  
              - output.set_level: 
                  id: pwm_output_yellow
                  level: !lambda |- 
                    return (x/100) * ( (5500 - id(led_color_temperature).state)/2300 );          
                                        